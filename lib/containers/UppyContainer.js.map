{"version":3,"sources":["../../src/containers/UppyContainer.js"],"names":["UppyContainer","state","files","addFile","bind","removeFile","startUpload","props","uploader","endpoint","console","log","Uploader","nextProps","opts","file","setState","concat","fileID","filteredFiles","filter","id","start","children","propsToPass","Children","map","child","cloneElement","length","defaultProps","propTypes"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAEMA,a;;;AACJ,2BAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa;AACXC,aAAO;AADI,KAAb;;AAIA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,OAAf;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,OAAlB;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,OAAnB;AARY;AASb;;;;yCAEqB;AAAA,mBACS,KAAKG,KADd;AAAA,UACbC,QADa,UACbA,QADa;AAAA,UACHC,QADG,UACHA,QADG;;;AAGpB,UAAI,CAACD,QAAD,IAAa,CAACC,QAAlB,EAA4B;AAC1BC,gBAAQC,GAAR,CAAY,yCAAZ;AACA;AACD;;AAED,UAAMC,WAAWJ,QAAjB;AACA,WAAKA,QAAL,GAAgB,IAAII,QAAJ,CAAa,EAAEH,kBAAF,EAAb,CAAhB;AACD;;;8CAE0BI,S,EAAW;AACpC,UAAIA,UAAUL,QAAV,KAAuB,KAAKD,KAAL,CAAWC,QAAtC,EAAgD;AAC9C,aAAKA,QAAL,GAAgB,IAAII,QAAJ,CAAa;AAC3BH,oBAAUI,UAAUJ;AADO,SAAb,CAAhB;AAGD;;AAED,UAAII,UAAUJ,QAAV,KAAuB,KAAKF,KAAL,CAAWE,QAAtC,EAAgD;AAC9C,aAAKD,QAAL,CAAcM,IAAd,CAAmBL,QAAnB,GAA8BI,UAAUJ,QAAxC;AACD;AACF;;;4BAEQM,I,EAAM;AAAA,UACNb,KADM,GACG,KAAKD,KADR,CACNC,KADM;;AAEb,WAAKc,QAAL,CAAc;AACZd,eAAOA,MAAMe,MAAN,CAAa,CAACF,IAAD,CAAb;AADK,OAAd;AAGD;;;+BAEWG,M,EAAQ;AAClB,UAAMC,gBAAgB,KAAKlB,KAAL,CAAWC,KAAX,CAAiBkB,MAAjB,CAAwB,UAACL,IAAD,EAAU;AACtD,eAAOA,KAAKM,EAAL,KAAYH,MAAnB;AACD,OAFqB,CAAtB;;AAIA,WAAKF,QAAL,CAAc;AACZd,eAAOiB;AADK,OAAd;AAGD;;;kCAEa;AACZ,WAAKX,QAAL,CAAcc,KAAd,CAAoB,KAAKrB,KAAL,CAAWC,KAA/B;AACD;;;6BAES;AAAA,UACDqB,QADC,GACW,KAAKhB,KADhB,CACDgB,QADC;;AAER,UAAMC,cAAc;AAClBtB,eAAO,KAAKD,KAAL,CAAWC,KADA;AAElBC,iBAAS,KAAKA,OAFI;AAGlBE,oBAAY,KAAKA,UAHC;AAIlBC,qBAAa,KAAKA;AAJA,OAApB;AAMAI,cAAQC,GAAR,CAAY,gBAAMc,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA6B,UAACI,KAAD;AAAA,eAAW,gBAAMC,YAAN,CAAmBD,KAAnB,EAA0BH,WAA1B,CAAX;AAAA,OAA7B,CAAZ;AACA;AACE;AACA;AAAA;AAAA;AACID,mBAASM,MAAT,GAAkB,CAAlB,GAAsB,gBAAMJ,QAAN,CAAeC,GAAf,CAAmB,KAAKnB,KAAL,CAAWgB,QAA9B,EAAwC,UAACI,KAAD;AAAA,mBAAW,gBAAMC,YAAN,CAAmBD,KAAnB,EAA0BH,WAA1B,CAAX;AAAA,WAAxC,CAAtB,GAAmH,gBAAMI,YAAN,CAAmBL,QAAnB,EAA6BC,WAA7B;AADvH;AAFF;AAMD;;;;;;AAGHxB,cAAc8B,YAAd,GAA6B,EAA7B;;AAEA9B,cAAc+B,SAAd,GAA0B,EAA1B;;kBAEe/B,a","file":"UppyContainer.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\n\nclass UppyContainer extends Component {\n  constructor() {\n    super()\n    this.state = {\n      files: []\n    }\n\n    this.addFile = this.addFile.bind(this)\n    this.removeFile = this.removeFile.bind(this)\n    this.startUpload = this.startUpload.bind(this)\n  }\n\n  componentWillMount () {\n    const {uploader, endpoint} = this.props\n\n    if (!uploader || !endpoint) {\n      console.log('ERROR: Uploader or endpoint not defined')\n      return\n    }\n\n    const Uploader = uploader\n    this.uploader = new Uploader({ endpoint })\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.uploader !== this.props.uploader) {\n      this.uploader = new Uploader({\n        endpoint: nextProps.endpoint\n      })\n    }\n\n    if (nextProps.endpoint !== this.props.endpoint) {\n      this.uploader.opts.endpoint = nextProps.endpoint\n    }\n  }\n  \n  addFile (file) {\n    const {files} = this.state\n    this.setState({\n      files: files.concat([file])\n    })\n  }\n\n  removeFile (fileID) {\n    const filteredFiles = this.state.files.filter((file) => {\n      return file.id !== fileID\n    })\n\n    this.setState({\n      files: filteredFiles\n    })\n  }\n  \n  startUpload() {\n    this.uploader.start(this.state.files)\n  }\n  \n  render () {\n    const {children} = this.props\n    const propsToPass = {\n      files: this.state.files,\n      addFile: this.addFile,\n      removeFile: this.removeFile,\n      startUpload: this.startUpload\n    }\n    console.log(React.Children.map(children, (child) => React.cloneElement(child, propsToPass)))\n    return (\n      // probably should only allow this.props.children.length === 1\n      <div>\n        { children.length > 1 ? React.Children.map(this.props.children, (child) => React.cloneElement(child, propsToPass)) : React.cloneElement(children, propsToPass) }\n      </div>\n    )\n  }\n}\n\nUppyContainer.defaultProps = {}\n\nUppyContainer.propTypes = {}\n\nexport default UppyContainer"]}